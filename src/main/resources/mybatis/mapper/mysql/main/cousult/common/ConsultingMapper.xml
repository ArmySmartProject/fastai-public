<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ai.maum.biz.fastaicc.main.cousult.common.mapper.ConsultingMapper">

	<select id="getOpIbStateList" parameterType="ai.maum.biz.fastaicc.main.cousult.common.domain.FrontMntVO"	resultType="map">
		SELECT /*getOpIbStateList - /상담 상단 상태바 조회 IB*/
			FORMAT(TOTAL_CNT,0) AS TOTAL_CNT,
			FORMAT(BOT_CNT,0) AS BOT_CNT,
			FORMAT(BOT_CSR_CNT,0) AS BOT_CSR_CNT,
			FORMAT(ETC_CNT,0) AS ETC_CNT,
			FORMAT(TOTAL_SCENARIO_CNT,0) AS TOTAL_SCENARIO_CNT,
			FORMAT(USER_BOT_CNT,0) AS USER_BOT_CNT,
			FORMAT(USER_BOT_CSR_CNT,0) AS USER_BOT_CSR_CNT,
			FORMAT(USER_ETC_CNT,0) AS USER_ETC_CNT,
			FORMAT(BOT_CNT+BOT_CSR_CNT+ETC_CNT,0) AS TOTAL_SUM,
			FORMAT(USER_BOT_CNT+USER_BOT_CSR_CNT+USER_ETC_CNT,0) AS USER_TOTAL_CNT,
			IFNULL(SEC_TO_TIME(CAST(USER_TALK_TIME AS signed INTEGER)),'00:00') AS USER_TALK_TIME,
<!-- 			FORMAT(USER_SCENARIO_CNT,0) AS USER_SCENARIO_CNT, -->
			IFNULL(SEC_TO_TIME(CAST(USER_TALK_TIME / (USER_BOT_CNT+USER_BOT_CSR_CNT+USER_ETC_CNT) AS signed INTEGER)),'00:00') AS AVR_TALK_TIME,
			CUST_OP_STATUS,
			CHAT_CONSULT_STATUS,
			OP_LOGIN_ID,
			OP_USER_NM
		FROM (SELECT COUNT(*) AS TOTAL_CNT
			, IFNULL(SUM(IF(A.CALL_STATUS='CS0005', 1, 0)),0) AS BOT_CNT
			, IFNULL(SUM(IF(A.CALL_STATUS='CS0010' OR A.CALL_STATUS='CS0031', 1, 0)),0) AS BOT_CSR_CNT
			, IFNULL(SUM(IF(A.CALL_STATUS='CS0003', 1, 0)),0) AS ETC_CNT	 
			, IFNULL(SUM(IF(A.SCENARIO_RESULT = 'Y',1 ,0)),0) AS TOTAL_SCENARIO_CNT
			, IFNULL(SUM(IF(A.CALL_STATUS='CS0005' AND A.CUST_OP_ID = #{sessId}, 1, 0)),0) AS USER_BOT_CNT
			, IFNULL(SUM(IF((A.CALL_STATUS='CS0010' OR A.CALL_STATUS='CS0031') AND A.CUST_OP_ID = #{sessId}, 1, 0)),0) AS USER_BOT_CSR_CNT
			, IFNULL(SUM(IF(A.CALL_STATUS='CS0003' AND A.CUST_OP_ID = #{sessId}, 1, 0)),0) AS USER_ETC_CNT	 
			, IFNULL(SUM(IF(A.CUST_OP_ID = #{sessId}, A.DURATION, 0)),0) AS USER_TALK_TIME
<!-- 			, IFNULL(SUM(IF(A.SCENARIO_RESULT = 'Y' AND A.CUST_OP_ID = #{sessId},1 ,0)),0) AS USER_SCENARIO_CNT -->
			, (SELECT CUST_OP_STATUS FROM TN_USER WHERE USER_ID= #{sessId}) AS CUST_OP_STATUS
			, (SELECT CHAT_CONSULT_STATUS FROM TN_USER WHERE USER_ID= #{sessId}) AS CHAT_CONSULT_STATUS
			, (SELECT USER_ID FROM TN_USER WHERE USER_ID = #{sessId}) AS OP_LOGIN_ID
			, (SELECT USER_NM FROM TN_USER WHERE USER_ID = #{sessId}) AS OP_USER_NM
			FROM CALL_HISTORY A LEFT JOIN TN_USER B ON A.CUST_OP_ID=B.USER_ID
			WHERE 1=1
			<![CDATA[
			AND A.CALL_DATE <= DATE_FORMAT(NOW(),'%Y-%m-%d 23:59:59')
			AND A.CALL_DATE >= DATE_FORMAT(NOW(),'%Y.%m.%d')
			AND A.CALL_TYPE_CODE ='CT0001'
			AND B.COMPANY_ID=(SELECT COMPANY_ID FROM TN_USER WHERE USER_ID=#{sessId})
			]]>
		) T
	</select>

	<select id="getOpTotalObStateList" parameterType="ai.maum.biz.fastaicc.main.cousult.common.domain.FrontMntVO"	resultType="map">
		SELECT (SELECT COUNT(C.CUST_ID) 
				  FROM (SELECT A.CUST_ID
						  FROM CM_CONTRACT A RIGHT JOIN CALL_HISTORY B ON A.CONTRACT_NO = B.CONTRACT_NO
						 WHERE B.CUST_OP_ID IN (SELECT USER_ID FROM TN_USER WHERE COMPANY_ID = #{schCompanyId})
						   AND B.CALL_TYPE_CODE = 'CT0002' 
						   AND A.CUST_ID IS NOT NULL
						 GROUP BY A.CUST_ID) C)																		AS TOTAL_DB_CNT
			 , IFNULL(TOTAL_TRY_CNT, 0)																				AS TOTAL_TRY_CNT
			 , IFNULL(TOTAL_CALL_CNT, 0)																			AS TOTAL_CALL_CNT
			 , IFNULL(TOTAL_SUC_CNT, 0)																				AS TOTAL_SUC_CNT
			 , IFNULL(TOTAL_SCENARIO_CNT, 0)																		AS TOTAL_SCENARIO_CNT
			 , IFNULL(TRUNCATE(TOTAL_TRY_CNT / TIMESTAMPDIFF(HOUR, CONCAT(DATE(NOW()), ' 09:00'), NOW()), 1), 0)	AS TOTAL_CPH
			 , IFNULL(TRUNCATE(TOTAL_SUC_CNT / TIMESTAMPDIFF(HOUR, CONCAT(DATE(NOW()), ' 09:00'), NOW()), 1), 0)	AS TOTAL_SPH
		  FROM (SELECT COUNT(CALL_ID) AS TOTAL_TRY_CNT
					  , SUM(IF(CALL_STATUS IN ('CS0002', 'CS0009'), 1, 0)) AS TOTAL_CALL_CNT
					  , SUM(IF(DIAL_RESULT = '200' OR DIAL_RESULT IS NULL AND CALL_ID IS NOT NULL, 1, 0)) AS TOTAL_SUC_CNT
					  , SUM(IF(SCENARIO_RESULT = 'Y', 1, 0)) AS TOTAL_SCENARIO_CNT
				  FROM CALL_HISTORY 
				 WHERE 1=1
				   AND DATE(CALL_DATE) = DATE(NOW())
				   AND CUST_OP_ID IN (SELECT USER_ID FROM TN_USER WHERE COMPANY_ID = #{schCompanyId})
				   AND CALL_TYPE_CODE = 'CT0002' <!-- AND A.IS_INBOUND = 'N' -->  <!-- AND B.CALL_TYPE_CODE = 'CT0002' -->
				) AA
	</select>

	<select id="getOpTotalObStateList_before" parameterType="ai.maum.biz.fastaicc.main.cousult.common.domain.FrontMntVO"	resultType="map">
		select /*getOpTotalObStateList - 상담 상단 상태바 조회 OB TOTAL*/
		      MAX(IF(code = 0, cnt, 0)) as TOTAL_DB_CNT
		    , MAX(IF(code = 1, cnt, 0)) as TOTAL_TRY_CNT
		    , MAX(IF(code = 2, cnt, 0)) as TOTAL_CALL_CNT
		    , MAX(IF(code = 3, cnt, 0)) as TOTAL_SUC_CNT
		    , MAX(IF(code = 4, cnt, 0)) as TOTAL_CPH
		    , MAX(IF(code = 5, cnt, 0)) as TOTAL_SPH
		from
		    (
		    select 0 as code, count(*) as cnt
		    from CM_CONTRACT a
		    where date(a.UPDATED_DTM) = date(now())
		    union all
		    select 1 as code, count(*) as cnt
		    from CM_CONTRACT a
		    where date(a.UPDATED_DTM) = date(now()) and a.CALL_TRY_COUNT > 0
		    union all
		    select 2 as code, count(*) as cnt
		    from CM_CONTRACT a, CALL_HISTORY b
		    where date(a.UPDATED_DTM) = date(now()) and a.CONTRACT_NO = b.CONTRACT_NO and b.CALL_STATUS != 'CS_0003'
		    union all
		    select 3 as code, count(*) as cnt
		    from CM_CONTRACT a, CALL_HISTORY b
		    where date(a.UPDATED_DTM) = date(now()) and a.CONTRACT_NO = b.CONTRACT_NO and b.CALL_STATUS in ('CS_0005', 'CS_0010')
		    union all
		    select 4 as code, truncate(count(*) / TIMESTAMPDIFF(hour, concat(date(now()), ' 09:00'), now()), 0) as cnt
		    from CM_CONTRACT a
		    where date(a.UPDATED_DTM) = date(now()) and a.CALL_TRY_COUNT > 0
		    union all
		    select 5 as code, truncate(count(*) / TIMESTAMPDIFF(hour, concat(date(now()), ' 09:00'), now()), 0) as cnt
		    from CM_CONTRACT a, CALL_HISTORY b
		    where date(a.UPDATED_DTM) = date(now()) and a.CONTRACT_NO = b.CONTRACT_NO and b.CALL_STATUS in ('CS_0005', 'CS_0010')
		    ) as t
	</select>

	<select id="getOpUserObStateList" parameterType="ai.maum.biz.fastaicc.main.cousult.common.domain.FrontMntVO"	resultType="map">
		SELECT IFNULL(USER_TRY_CNT, 0)																			AS USER_TRY_CNT
			 , IFNULL(USER_CALL_CNT, 0)																			AS USER_CALL_CNT
			 , IFNULL(USER_SUC_CNT, 0)																			AS USER_SUC_CNT
			 , IFNULL(USER_DIAL, 0)																				AS USER_DIAL
			 , IFNULL(USER_SCENARIO_CNT, 0)																		AS USER_SCENARIO_CNT
			 , IFNULL(TRUNCATE(USER_DIAL / TIMESTAMPDIFF(HOUR, CONCAT(DATE(NOW()), ' 09:00'), NOW()), 1), 0)	AS USER_DPH
			 , IFNULL(TRUNCATE(USER_TRY_CNT / TIMESTAMPDIFF(HOUR, CONCAT(DATE(NOW()), ' 09:00'), NOW()), 1), 0)	AS USER_CPH
			 , IFNULL(TRUNCATE(USER_SUC_CNT / TIMESTAMPDIFF(HOUR, CONCAT(DATE(NOW()), ' 09:00'), NOW()), 1), 0)	AS USER_SPH
			 , IFNULL(OP_LOGIN_ID, #{sessId}) as OP_LOGIN_ID
		  FROM (
				SELECT COUNT(CALL_ID) AS USER_TRY_CNT
					  , SUM(IF(CALL_STATUS IN ('CS0002', 'CS0009'), 1, 0)) AS USER_CALL_CNT
					  , SUM(IF(DIAL_RESULT = '200' OR DIAL_RESULT IS NULL AND CALL_ID IS NOT NULL, 1, 0)) AS USER_SUC_CNT
					  , SUM(IF(SCENARIO_RESULT = 'Y', 1, 0)) AS USER_SCENARIO_CNT
					  , COUNT(CALL_ID) AS USER_DIAL
					  , CUST_OP_ID AS OP_LOGIN_ID
				  FROM CALL_HISTORY
				 WHERE 1=1
				   AND DATE(CALL_DATE) = DATE(NOW())
				   AND CUST_OP_ID = #{sessId}
				   AND CALL_TYPE_CODE = 'CT0002' <!-- AND A.IS_INBOUND = 'N' -->
				) AA
	</select>
	
	<select id="getOpUserObStateList_before" parameterType="ai.maum.biz.fastaicc.main.cousult.common.domain.FrontMntVO"	resultType="map">
	select /*getOpUserObStateList - 상담 상단 상태바 조회 OB USER*/
		      MAX(IF(code = 0, cnt, 0)) as USER_TRY_CNT
		    , MAX(IF(code = 1, cnt, 0)) as USER_CALL_CNT
		    , MAX(IF(code = 2, cnt, 0)) as USER_SUC_CNT
		    , MAX(IF(code = 3, cnt, 0)) as USER_DIAL
		    , MAX(IF(code = 4, cnt, 0)) as USER_DPH
		    , MAX(IF(code = 5, cnt, 0)) as USER_CPH
		    , MAX(IF(code = 6, cnt, 0)) as USER_SPH
		    , (SELECT USER_ID FROM TN_USER WHERE USER_ID = #{sessId}) AS OP_LOGIN_ID
		from
		    (
		    select 0 as code, count(*) as cnt
		    from CM_CONTRACT a
		    where date(a.UPDATED_DTM) = date(now()) and a.CALL_TRY_COUNT > 0 and a.CUST_OP_ID = #{sessId}
		    union all
		    select 1 as code, count(*) as cnt
		    from CM_CONTRACT a, CALL_HISTORY b
		    where date(a.UPDATED_DTM) = date(now()) and a.CONTRACT_NO = b.CONTRACT_NO and b.CALL_STATUS != 'CS_0003' and a.CUST_OP_ID = #{sessId}
		    union all
		    select 2 as code, count(*) as cnt
		    from CM_CONTRACT a, CALL_HISTORY b
		    where date(a.UPDATED_DTM) = date(now()) and a.CONTRACT_NO = b.CONTRACT_NO and b.CALL_STATUS in ('CS_0005', 'CS_0010') and a.CUST_OP_ID = #{sessId}
		    union all
		    select 3 as code, ifnull(sum(a.CALL_TRY_COUNT), 0) as cnt
		    from CM_CONTRACT a
		    where date(a.UPDATED_DTM) = date(now()) and a.CUST_OP_ID = #{sessId}
		    union all
		    select 4 as code, truncate(ifnull(sum(a.CALL_TRY_COUNT) / TIMESTAMPDIFF(hour, concat(date(now()), ' 09:00'), now()), 0), 0) as cnt
		    from CM_CONTRACT a
		    where date(a.UPDATED_DTM) = date(now()) and a.CALL_TRY_COUNT > 0 and a.CUST_OP_ID = #{sessId}
		    union all
		    select 5 as code, truncate(count(*) / TIMESTAMPDIFF(hour, concat(date(now()), ' 09:00'), now()), 0) as cnt
		    from CM_CONTRACT a
		    where date(a.UPDATED_DTM) = date(now()) and a.CALL_TRY_COUNT > 0 and a.CUST_OP_ID = #{sessId}
		    union all
		    select 6 as code, truncate(count(*) / TIMESTAMPDIFF(hour, concat(date(now()), ' 09:00'), now()), 0) as cnt
		    from CM_CONTRACT a, CALL_HISTORY b
		    where date(a.UPDATED_DTM) = date(now()) and a.CONTRACT_NO = b.CONTRACT_NO and b.CALL_STATUS in ('CS_0005', 'CS_0010') and a.CUST_OP_ID = #{sessId}
		   	) as t
	</select>

	<select id="getUserChatList" parameterType="map"	resultType="map">
		SELECT /*getUserChatList - 고객 채팅정보리스트를 조회*/
		         A.STT_RESULT_DETAIL_ID
		       , A.STT_RESULT_ID
		       , A.CALL_ID
		       , A.SPEAKER_CODE
		       , A.SENTENCE_ID
		       , A.SENTENCE
		       , A.START_TIME
		       , A.END_TIME
		       , A.IGNORED
		       , A.CREATED_DTM
		FROM     CM_STT_RSLT_DETAIL A
		       , CM_CONTRACT B
		WHERE    A.CALL_ID     = B.LAST_CALL_ID
		AND      B.CONTRACT_NO = #{CONTRACT_NO}
		ORDER BY A.STT_RESULT_DETAIL_ID, A.SENTENCE_ID
	</select>

	<select id="getUserCampSList" parameterType="map"	resultType="map">
		SELECT /*getUserCampSList - 고객 캠패인스코어 조회*/
		         A.SEQ_NUM
		       , A.CALL_ID
		       , A.CONTRACT_NO
		       , A.INFO_SEQ
		       , A.INFO_TASK
		       , A.TASK_VALUE
		       , A.REVIEW_COMMENT
		       , A.CREATED_DTM
		       , A.UPDATED_DTM
		       , A.CAMPAIGN_ID
		FROM     CM_CAMPAIGN_SCORE A
		WHERE    1=1
			AND A.CONTRACT_NO = #{CONTRACT_NO}
			AND A.CALL_ID = (SELECT LAST_CALL_ID FROM CM_CONTRACT WHERE CONTRACT_NO = #{CONTRACT_NO} LIMIT 1)
		ORDER BY A.SEQ_NUM, A.INFO_SEQ
	</select>

	<!--<select id="getUserInfoList" parameterType="map"	resultType="map">-->
	<!--SELECT /*getUserInfoList - 고객 정보 조회*/-->
	<!--A.CUST_ID-->
	<!--, A.CUST_NM-->
	<!--, A.JUMIN_NO-->
	<!--, A.CUST_TEL_NO-->
	<!--, A.CUST_COMPANY_NO-->
	<!--, A.CUST_HOME_NO-->
	<!--, A.CUST_ETC_NO-->
	<!--, A.CUST_TEL_COMP-->
	<!--, A.TEL_COMP_SAVE_YN-->
	<!--, A.CERTIFI_NO-->
	<!--, CONVERT(VARCHAR(10), A.CREATE_DT,120) AS CREATE_DT-->
	<!--, CONVERT(VARCHAR(10), A.MODIFY_DT,120) AS MODIFY_DT-->
	<!--, A.CUST_ADDRESS-->
	<!--, A.CUST_DETAIL_ADDRESS-->
	<!--, A.CONSULT_CHAT_ID-->
	<!--, A.CUST_TYPE-->
	<!--, A.CUST_STATE-->
	<!--, IIF(A.CUST_STATE =0,'활성상태', IIF(A.CUST_STATE =1,'해지상태', IIF(A.CUST_STATE =2,'휴먼상태',NULL))) AS CUST_STATE_NM-->
	<!--, A.CUST_SUBSC_PLAN-->
	<!--, A.CUST_API_ID-->
	<!--, A.CUST_API_KEY-->
	<!--, CONVERT(VARCHAR(10), A.CUST_REG_DATE,120) AS CUST_REG_DATE-->
	<!--, CONVERT(VARCHAR(10), A.CUST_TERM_DATE,120) AS CUST_TERM_DATE-->
	<!--, A.CUST_REG_PATH-->
	<!--, A.CUST_ADDRESS2-->
	<!--, A.CUST_DETAIL_ADDRESS2-->
	<!--, A.CUST_EMAIL-->
	<!--FROM   CUST_BASE_INFO A-->
	<!--WHERE  1=1-->
	<!--<if test="CUST_ID != null and CUST_ID != '' ">-->
	<!--AND A.CUST_ID = #{CUST_ID}-->
	<!--</if>-->
	<!--<if test="TEL_NO != null and TEL_NO != '' ">-->
	<!--&lt;!&ndash; 고객연락처 &ndash;&gt;-->
	<!--AND A.CUST_TEL_NO = #{TEL_NO}-->
	<!--</if>-->
	<!--<if test="CUST_TEL_NO != null and CUST_TEL_NO != '' ">-->
	<!--&lt;!&ndash; 고객연락처 &ndash;&gt;-->
	<!--AND A.CUST_TEL_NO = #{CUST_TEL_NO}-->
	<!--</if>-->
	<!--</select>-->

	<select id="getUserInfoList" parameterType="map"	resultType="map">
		SELECT A.CUST_ID, A.CAMPAIGN_ID, A.CUST_NM, A.CUST_TEL_NO
		FROM CUST_INFO A, CM_CONTRACT B
		WHERE 1=1 AND A.CUST_ID = B.CUST_ID
		<if test="CONTRACT_NO != null and CONTRACT_NO != '' ">
			AND B.CONTRACT_NO = #{CONTRACT_NO}
		</if>
	</select>

	<select id="getUserPaymentList" parameterType="map"	resultType="map">
		SELECT /*getUserPaymentList - 고객 결재정보 조회*/
		         A.PAY_ID
		       , A.CUST_ID
		       , IF(A.CARD_INFO,concat(LEFT(A.CARD_INFO,LENGTH(A.CARD_INFO)-4),'****'),'') AS CARD_INFO
		       , date_format(A.RECENT_PAYMENT_DATE,'%Y-%m-%d')                             AS RECENT_PAYMENT_DATE
		       , A.PAY_AMOUNT
		       , date_format(A.NEXT_PAYMENT_DATE,'%Y-%m-%d') AS NEXT_PAYMENT_DATE
		       , A.CUST_SUBSC_PLAN
		       , A.EXPECTED_PAY_AMOUNT
		       , A.CREATOR_ID
		       , A.UPDATER_ID
		       , date_format(A.CREATED_DTM,'%Y-%m-%d') AS CREATED_DTM
		       , date_format(A.UPDATED_DTM,'%Y-%m-%d') AS UPDATED_DTM
		FROM     CUST_PAYMENT_INFO A
		WHERE    A.CUST_ID = #{CUST_ID}
		ORDER BY PAY_ID DESC
		LIMIT    1
	</select>

	<select id="getCsHisList" parameterType="map" resultType="map">
		SELECT
		         /*getUserPaymentList - 고객 상담이력정보 정보(사이드 리스트 )*/
		         IFNULL(B.CONTRACT_NO,'-')                           AS CONTRACT_NO
		       , IFNULL(TIME_format(SEC_TO_TIME(B.DURATION),'%H:%i:%s'),'-')      AS DURATION
		       , date_format(B.START_TIME,'%Y.%m.%d %H:%i')          AS START_TIME
		       , IFNULL(B.CALL_TYPE_CODE,'-')                        AS CALL_TYPE_CODE
		       , IFNULL(IF(B.CALL_TYPE_CODE='CT0001','I/B','O/B'),'-') AS CALL_TYPE_NM
		       , IFNULL(B.CONSULT_TYPE1_DEPTH1,'-')                  AS CONSULT_TYPE1_DEPTH1
		       , IFNULL(B.CONSULT_TYPE1_DEPTH2,'-')                  AS CONSULT_TYPE1_DEPTH2
		       , IFNULL(B.CONSULT_TYPE1_DEPTH3,'-')                  AS CONSULT_TYPE1_DEPTH3
		       , IFNULL(B.CONSULT_TYPE2_DEPTH1,'-')                  AS CONSULT_TYPE2_DEPTH1
		       , IFNULL(B.CONSULT_TYPE2_DEPTH2,'-')                  AS CONSULT_TYPE2_DEPTH2
		       , IFNULL(B.CONSULT_TYPE2_DEPTH3,'-')                  AS CONSULT_TYPE2_DEPTH3
		       , IFNULL(B.CONSULT_TYPE3_DEPTH1,'-')                  AS CONSULT_TYPE3_DEPTH1
		       , IFNULL(B.CONSULT_TYPE3_DEPTH2,'-')                  AS CONSULT_TYPE3_DEPTH2
		       , IFNULL(B.CONSULT_TYPE3_DEPTH3,'-')                  AS CONSULT_TYPE3_DEPTH3
			   , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE1_DEPTH1 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')			 	  	  AS CONSULT_TYPE1_DEPTH1_NM
		       , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE1_DEPTH2 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')                  AS CONSULT_TYPE1_DEPTH2_NM
		       , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE1_DEPTH3 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')                  AS CONSULT_TYPE1_DEPTH3_NM
		       , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE2_DEPTH1 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')                  AS CONSULT_TYPE2_DEPTH1_NM
		       , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE2_DEPTH2 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')                  AS CONSULT_TYPE2_DEPTH2_NM
		       , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE2_DEPTH3 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')                  AS CONSULT_TYPE2_DEPTH3_NM
		       , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE3_DEPTH1 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')                  AS CONSULT_TYPE3_DEPTH1_NM
		       , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE3_DEPTH2 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')                  AS CONSULT_TYPE3_DEPTH2_NM
		       , IFNULL((SELECT CODE_NM  FROM CUST_CATEGORY_CD AA  WHERE AA.CODE = B.CONSULT_TYPE3_DEPTH3 AND AA.CAMPAIGN_ID = A.CAMPAIGN_ID),'-')                  AS CONSULT_TYPE3_DEPTH3_NM
		       , IFNULL(B.CUST_OP_ID,'-')                            AS CUST_OP_ID
		       , IFNULL(B.CALL_MEMO,'-')                             AS CALL_MEMO
		       , IFNULL(B.MONITOR_CONT,'-')                          AS MONITOR_CONT
		       , IFNULL(C.CD_DESC,'-')                          AS CD_DESC
		       , IFNULL(C.CD_DESC_ENG,'-')                          AS CD_DESC_ENG
		       , IFNULL(B.SIP_USER,'-')                          AS SIP_USER
		       , B.CALL_ID
		       <if test='inboundYn == "N"'>
		       , IFNULL(D.CD_DESC,'-')                  AS MNT_STATUS_NAME
		       , IFNULL(D.CD_DESC_ENG,'-')                  AS MNT_STATUS_NAME_ENG
		       </if>
		FROM   CM_CONTRACT A
      		LEFT OUTER JOIN CALL_HISTORY B
      			ON A.CONTRACT_NO =B.CONTRACT_NO
      		<choose>
      			<when test='inboundYn == "N"'>
      			LEFT OUTER JOIN CM_COMMON_CD C
      				ON B.DIAL_RESULT = C.CODE
 						AND C.FIRST_CD = '23'
 				LEFT OUTER JOIN CM_COMMON_CD D
      				ON B.MNT_STATUS = D.CODE
      					AND D.FIRST_CD = '24'
      			</when>
      			<otherwise>
   				LEFT OUTER JOIN CM_COMMON_CD C
   					ON B.CALL_STATUS = C.CODE
						AND C.FIRST_CD = '02'
      			</otherwise>
      		</choose>
		WHERE   1=1
		AND A.TEL_NO = #{TEL_NO}
		AND B.CUST_OP_ID IN (SELECT USER_ID FROM TN_USER WHERE COMPANY_ID IN(SELECT COMPANY_ID FROM TN_USER WHERE USER_ID = #{userId}))
		<choose>
			<when test='inboundYn == "Y"'>
				<!-- AND B.CONSULT_TYPE1_DEPTH1 IS NOT NULL
				AND B.CONSULT_TYPE1_DEPTH1 != '999' -->
				AND B.CALL_TYPE_CODE = 'CT0001'
				ORDER BY A.CONTRACT_NO DESC
			</when>
			<otherwise>
				AND B.CALL_TYPE_CODE = 'CT0002'
				ORDER BY START_TIME DESC
			</otherwise>
		</choose>
		LIMIT    100
	</select>
	
	<select id="getCsContList" parameterType="map" resultType="map">
		SELECT /*getCsContList - 고객 채팅(탐지정보)*/
		A.STT_RESULT_DETAIL_ID
		, A.STT_RESULT_ID
		, A.CALL_ID
		, A.SPEAKER_CODE
		, A.SENTENCE_ID
		, A.SENTENCE
		, A.START_TIME
		, A.END_TIME
		, A.IGNORED
		, A.CREATED_DTM
		FROM
		CM_STT_RSLT_DETAIL A
		, CM_CONTRACT B
		WHERE A.CALL_ID = B.LAST_CALL_ID
		AND B.CONTRACT_NO = #{CONTRACT_NO}
		ORDER BY
		A.STT_RESULT_DETAIL_ID,A.SENTENCE_ID
	</select>
	<select id="getUserCsDtlList" parameterType="map" 	resultType="map">
		SELECT /*getUserCsDtlList - 고객 상담내용 정보*/
		B.CALL_ID
		, B.CONTRACT_NO
		, B.CONSULT_TYPE1_DEPTH1
		, B.CONSULT_TYPE1_DEPTH2
		, B.CONSULT_TYPE1_DEPTH3
		, B.CONSULT_TYPE2_DEPTH1
		, B.CONSULT_TYPE2_DEPTH2
		, B.CONSULT_TYPE2_DEPTH3
		, B.CONSULT_TYPE3_DEPTH1
		, B.CONSULT_TYPE3_DEPTH2
		, B.CONSULT_TYPE3_DEPTH3
		, B.CALL_MEMO
		, B.MONITOR_CONT
		, C.RECALL_TEL_NO
		, date_format(C.RECALL_DATE,'%Y-%m-%d %H:%i' ) AS RECALL_DATE
		, D.NEW_CUST_OP_ID
		, D.IMPORTANCE_LEVEL
		, D.NEW_CUST_OP_EMAIL
		, A.CAMPAIGN_ID
		FROM CM_CONTRACT A 
			INNER JOIN CALL_HISTORY B
				ON A.CONTRACT_NO =B.CONTRACT_NO
			LEFT OUTER JOIN RECALL_HISTORY C
				ON A.CONTRACT_NO =C.CONTRACT_NO
			LEFT OUTER JOIN CALL_TRANSFER_HISTORY D
				ON A.CONTRACT_NO =D.CONTRACT_NO
		WHERE 1=1
			AND A.TEL_NO = #{TEL_NO}
			AND A.CAMPAIGN_ID = #{CAMPAIGN_ID}
		ORDER BY B.CALL_ID DESC
		LIMIT 1
	</select>
	
	<select id="getCallbackList" parameterType="map" resultType="map">
		SELECT /*getCallbackList - 콜백 사이드 리스트*/
			A.CALL_ID 
			,date_format(A.CALL_DATE,'%Y.%m.%d %H:%i') AS CALL_DATE
		    ,A.CONTRACT_NO
		    ,date_format(A.CALLBACK_DT,'%Y.%m.%d %H:%i') AS CALLBACK_DT
		    ,B.TEL_NO
		    ,IFNULL(C.CUST_NM,'-') AS CUST_NM                  
		    ,IFNULL(
		    (
		    	SELECT date_format(AA.CALL_DATE,'%Y.%m.%d %H:%i')
				FROM CALL_HISTORY AA
					LEFT OUTER JOIN CM_CONTRACT BB
						ON AA.CONTRACT_NO = BB.CONTRACT_NO
				WHERE AA.CUST_OP_ID = #{sessId}  
					AND BB.IS_INBOUND = #{inboundYn} 
		        ORDER BY BB.CONTRACT_NO DESC
		        LIMIT 1
			), '-') AS RECENT_CALL
			,B.	CAMPAIGN_ID
		FROM CALL_HISTORY A
			LEFT OUTER JOIN CM_CONTRACT B
				ON A.CONTRACT_NO = B.CONTRACT_NO
			LEFT OUTER JOIN CUST_BASE_INFO C
				ON B.CUST_ID = C.CUST_ID
		WHERE A.CALLBACK_STATUS = 'CB0002'
		AND B.IS_INBOUND = #{inboundYn}
		AND A.CUST_OP_ID = #{sessId}  
	</select>
	
	<select id="getRecallList" parameterType="ai.maum.biz.fastaicc.main.cousult.common.domain.FrontMntVO" resultType="map">
		SELECT /*getRecallList - 리콜 사이드 리스트*/
			A.CALL_ID
			,A.CONTRACT_NO
			,A.RECALL_TEL_NO
			,date_format(A.RECALL_DATE,'%Y.%m.%d %H:%i') AS RECALL_DATE
			,IFNULL(date_format(D.START_TIME,'%Y.%m.%d %H:%i'),'-') AS CREATED_DTM
			,A.CREATOR_ID
			,IFNULL(C.CUST_NM,'-') AS CUST_NM      
			,B.CUST_ID
			,B.	CAMPAIGN_ID
			,IFNULL(( 
				SELECT date_format(AA.CALL_DATE,'%Y.%m.%d %H:%i')
				FROM CALL_HISTORY AA 
					LEFT OUTER JOIN CM_CONTRACT BB
						ON AA.CONTRACT_NO = BB.CONTRACT_NO
				WHERE AA.CUST_OP_ID = #{sessId} 
					AND BB.IS_INBOUND = #{inboundYn} 
				          AND BB.CUST_ID = B.CUST_ID
				ORDER BY AA.CALL_DATE DESC LIMIT 1 
			),'-') AS RECENT_CALL
		FROM RECALL_HISTORY A
			LEFT OUTER JOIN CM_CONTRACT B 
				ON A.CONTRACT_NO = B.CONTRACT_NO 
			LEFT OUTER JOIN CUST_BASE_INFO C
				ON B.CUST_ID = C.CUST_ID
		 	LEFT OUTER JOIN CALL_HISTORY D
  	 			ON A.CALL_ID = D.CALL_ID
		WHERE A.CREATOR_ID = #{sessId}
			AND A.RECALL_TEL_NO IS NOT NULL
			AND A.RECALL_TEL_NO != '' 
			AND B.IS_INBOUND = #{inboundYn}
		ORDER BY A.CREATED_DTM DESC
	</select>
	
	<select id="getCheckCustTelNo" parameterType="String" resultType="map">
		SELECT COUNT(*) as CHECK_CNT
			 , CUST_ID
		  FROM CUST_BASE_INFO
		 WHERE CUST_TEL_NO = #{value}
	</select>

	<select id="getChatbotInfos" parameterType="String" resultType="map">
		SELECT *
		FROM Account
		WHERE No in (
			SELECT DISTINCT BOT_ID
			FROM BOT_MAPPING
			WHERE COMPANY_ID = (
				SELECT COMPANY_ID
				FROM TN_USER
				WHERE USER_ID = #{userId}
			)
		)
	</select>
	
	<update id="updateCallHistory" parameterType="map">
	<selectKey keyProperty="CALL_ID_FORSV" resultType="integer" order="BEFORE">
    	SELECT LAST_CALL_ID AS CALL_ID_FORSV FROM CM_CONTRACT WHERE CONTRACT_NO = #{CONTRACT_NO}
  	</selectKey>
	 UPDATE CALL_HISTORY  /*updateCallHistory -  상담내용 update */
	 SET  
	  CALL_MEMO =#{CALL_MEMO}
	  <!-- , UPDATER_ID =#{CUST_OP_ID} -->
	  <choose>
	  	<when test='inboundYn == "N"'>
	  		,DIAL_RESULT = #{DIAL_RESULT}
	  		,MNT_STATUS = #{MNT_STATUS}
	  	</when>
	  	<otherwise>
	 		, MONITOR_CONT =#{MONITOR_CONT}
			, CONSULT_TYPE1_DEPTH1 =#{CONSULT_TYPE1_DEPTH1}
			, CONSULT_TYPE1_DEPTH2 =#{CONSULT_TYPE1_DEPTH2}
			, CONSULT_TYPE1_DEPTH3 =#{CONSULT_TYPE1_DEPTH3}
			, CONSULT_TYPE2_DEPTH1 =#{CONSULT_TYPE2_DEPTH1}
			, CONSULT_TYPE2_DEPTH2 =#{CONSULT_TYPE2_DEPTH2}
			, CONSULT_TYPE2_DEPTH3 =#{CONSULT_TYPE2_DEPTH3}
			, CONSULT_TYPE3_DEPTH1 =#{CONSULT_TYPE3_DEPTH1}
			, CONSULT_TYPE3_DEPTH2 =#{CONSULT_TYPE3_DEPTH2}
			, CONSULT_TYPE3_DEPTH3 =#{CONSULT_TYPE3_DEPTH3} 	
	  	</otherwise>
	  </choose>
	 WHERE CALL_ID = #{CALL_ID_FORSV}
	      AND CONTRACT_NO = #{CONTRACT_NO}
	</update>
	
	<update id="mergeRecallHistory" parameterType="map">
		<selectKey keyProperty="CALL_ID" resultType="integer" order="BEFORE">
	    	SELECT LAST_CALL_ID AS CALL_ID FROM CM_CONTRACT WHERE CONTRACT_NO = #{CONTRACT_NO}
	  	</selectKey>
		INSERT INTO /*mergeRecallHistory -  재통화 merge*/
		RECALL_HISTORY (
		CONTRACT_NO
		,RECALL_TEL_NO
		,CREATOR_ID
		,UPDATER_ID
		,RECALL_DATE
		,CREATED_DTM
		,CALL_ID
		)
		VALUES (
		#{CONTRACT_NO}
		,#{RECALL_TEL_NO}
		,#{CUST_OP_ID}
		,#{CUST_OP_ID}
		,IF(#{RECALL_DATE}='',NULL,#{RECALL_DATE})
		,NOW()
		,#{CALL_ID}
		)
		ON DUPLICATE KEY
		UPDATE 
		UPDATER_ID =#{CUST_OP_ID}
		,RECALL_TEL_NO = #{RECALL_TEL_NO}
		,RECALL_DATE = IF(#{RECALL_DATE}='',NULL,#{RECALL_DATE})
	</update>

	<update id="mergeCallTranSferHistory" parameterType="map">
	<selectKey keyProperty="CALL_TRANSFER_ID" resultType="integer" order="BEFORE">
    	SELECT MAX(CALL_TRANSFER_ID) FROM CALL_TRANSFER_HISTORY WHERE CONTRACT_NO = #{CONTRACT_NO}
  	</selectKey>
		INSERT INTO /*mergeCallTranSferHistory - 이관merge*/
		CALL_TRANSFER_HISTORY (
		CONTRACT_NO
		, PREV_CUST_OP_ID
		, NEW_CUST_OP_ID
		, NEW_CUST_OP_EMAIL
		, IMPORTANCE_LEVEL
		, CREATOR_ID
		, UPDATER_ID
		<if test="CALL_TRANSFER_ID  lte 0">
		,CALL_TRANSFER_ID
		</if>
		)
		VALUES (
		  #{CONTRACT_NO}
		, #{CUST_OP_ID}
		, #{NEW_CUST_OP_ID}
		, #{NEW_CUST_OP_EMAIL}
		, #{IMPORTANCE_LEVEL}
		, #{CUST_OP_ID}
		, #{CUST_OP_ID}
		<if test="CALL_TRANSFER_ID lte 0">
		,#{CALL_TRANSFER_ID}
		</if>
		)
		ON DUPLICATE KEY
		UPDATE 
		UPDATER_ID =#{CUST_OP_ID}
		, NEW_CUST_OP_ID = #{NEW_CUST_OP_ID}
		, NEW_CUST_OP_EMAIL = #{NEW_CUST_OP_EMAIL}
		, IMPORTANCE_LEVEL = #{IMPORTANCE_LEVEL}
	</update>


	<update id="updateCmOpInfo" parameterType="map">
	 UPDATE TN_USER  /*updateCmOpInfo -  상담사 상태 업데이트 */
	 SET  
	  CUST_OP_STATUS =#{CUST_OP_STATUS}
	   <!-- , UPDATER_ID =#{CUST_OP_ID} -->
	 WHERE  USER_ID = #{CUST_OP_ID}
	</update>
	
	<update id="updateCmOpChatInfo" parameterType="map">
	 UPDATE TN_USER  /*updateCmOpChatInfo -  상담사 상태 업데이트 */
	 SET  
	  CHAT_CONSULT_STATUS =#{CHAT_CONSULT_STATUS}
	   <!-- , UPDATER_ID =#{CUST_OP_ID} -->
	 WHERE  USER_ID = #{CUST_OP_ID}
	</update>
	
	<update id="updateChatMemo" parameterType="map">
	 UPDATE CHAT_SESSION_LOG /* updateChatMemo - 상담메모 업데이트 */
	 SET SUPPORTER_COMMENT = #{supporterComment} 
	 WHERE HOST = #{host} 
	 AND ROOM_ID = #{roomId}
	</update>
	
	<insert id="insertCustBaseInfo" parameterType="map">
		/*insertCustBaseInfo -  고객 정보 신규등록 */
		INSERT INTO CUST_BASE_INFO ( 
			 CUST_NM
			, CREATE_DT
			, CUST_TEL_NO
			<if test="CUST_COMPANY_NO != null and CUST_COMPANY_NO != '' ">
			, CUST_COMPANY_NO
			</if>
			<if test="CUST_HOME_NO != null and CUST_HOME_NO != '' ">
			, CUST_HOME_NO
			</if>
			<if test="CUST_ADDRESS != null and CUST_ADDRESS != '' ">
			, CUST_ADDRESS
			</if>
			<if test="CUST_DETAIL_ADDRESS != null and CUST_DETAIL_ADDRESS != '' ">
			, CUST_DETAIL_ADDRESS
			</if>
			<if test="CONSULT_CHAT_ID != null and CONSULT_CHAT_ID != '' ">
			, CONSULT_CHAT_ID
			</if>
			<if test="CUST_TYPE != null and CUST_TYPE != '' ">
			, CUST_TYPE
			</if>
			<if test="CUST_SUBSC_PLAN != null and CUST_SUBSC_PLAN != '' ">
			, CUST_SUBSC_PLAN
			</if>
			<if test="CUST_API_ID != null and CUST_API_ID != '' ">
			, CUST_API_ID
			</if>
			<if test="CUST_API_KEY != null and CUST_API_KEY != '' ">
			, CUST_API_KEY
			</if>
			<if test="CUST_REG_DATE != null and CUST_REG_DATE != '' ">
			, CUST_REG_DATE
			</if>
			<if test="CUST_REG_PATH != null and CUST_REG_PATH != '' ">
			, CUST_REG_PATH
			</if>
			<if test="CUST_TERM_DATE != null and CUST_TERM_DATE != '' ">
			, CUST_TERM_DATE
			</if>
			<if test="CUST_ADDRESS2 != null and CUST_ADDRESS2 != '' ">
			, CUST_ADDRESS2
			</if>
			<if test="CUST_DETAIL_ADDRESS2 != null and CUST_DETAIL_ADDRESS2 != '' ">
			, CUST_DETAIL_ADDRESS2
			</if>
			<if test="CUST_EMAIL != null and CUST_EMAIL != '' ">
			, CUST_EMAIL
			</if>
		)VALUES (
			 #{CUST_NM}
			, NOW()
			, #{CUST_TEL_NO}
			<if test="CUST_COMPANY_NO != null and CUST_COMPANY_NO != '' ">
			, #{CUST_COMPANY_NO}
			</if>
			<if test="CUST_HOME_NO != null and CUST_HOME_NO != '' ">
			, #{CUST_HOME_NO}
			</if>
			<if test="CUST_ADDRESS != null and CUST_ADDRESS != '' ">
			, #{CUST_ADDRESS}
			</if>
			<if test="CUST_DETAIL_ADDRESS != null and CUST_DETAIL_ADDRESS != '' ">
			, #{CUST_DETAIL_ADDRESS}
			</if>
			<if test="CONSULT_CHAT_ID != null and CONSULT_CHAT_ID != '' ">
			, #{CONSULT_CHAT_ID}
			</if>
			<if test="CUST_TYPE != null and CUST_TYPE != '' ">
			, #{CUST_TYPE}
			</if>
			<if test="CUST_SUBSC_PLAN != null and CUST_SUBSC_PLAN != '' ">
			, #{CUST_SUBSC_PLAN}
			</if>
			<if test="CUST_API_ID != null and CUST_API_ID != '' ">
			, #{CUST_API_ID}
			</if>
			<if test="CUST_API_KEY != null and CUST_API_KEY != '' ">
			, #{CUST_API_KEY}
			</if>
			<if test="CUST_REG_DATE != null and CUST_REG_DATE != '' ">
			, #{CUST_REG_DATE}
			</if>
			<if test="CUST_REG_PATH != null and CUST_REG_PATH != '' ">
			, #{CUST_REG_PATH}
			</if>
			<if test="CUST_TERM_DATE != null and CUST_TERM_DATE != '' ">
			, #{CUST_TERM_DATE}
			</if>
			<if test="CUST_ADDRESS2 != null and CUST_ADDRESS2 != '' ">
			, #{CUST_ADDRESS2}
			</if>
			<if test="CUST_DETAIL_ADDRESS2 != null and CUST_DETAIL_ADDRESS2 != '' ">
			, #{CUST_DETAIL_ADDRESS2}
			</if>
			<if test="CUST_EMAIL != null and CUST_EMAIL != '' ">
			, #{CUST_EMAIL}
			</if>
		)	
	</insert>
	
	<insert id="insertCustPaymentInfo" parameterType="map">
		<selectKey keyProperty="CUST_ID" resultType="integer" order="BEFORE">
    		SELECT MAX(CUST_ID) FROM CUST_BASE_INFO
  		</selectKey>
		/*insertCustPaymentInfo -  고객 결제정보 신규등록 */
		INSERT INTO CUST_PAYMENT_INFO (
			  CUST_ID
			, CREATED_DTM
			<if test="CARD_INFO != null and CARD_INFO != '' ">
			, CARD_INFO
			</if>
			<if test="CUST_SUBSC_PLAN != null and CUST_SUBSC_PLAN != '' ">
			, CUST_SUBSC_PLAN
			</if>
			<if test="RECENT_PAYMENT_DATE != null and RECENT_PAYMENT_DATE != '' ">
			, RECENT_PAYMENT_DATE
			</if>
			<if test="NEXT_PAYMENT_DATE != null and NEXT_PAYMENT_DATE != '' ">
			, NEXT_PAYMENT_DATE
			</if>
			<if test="PAY_AMOUNT != null and PAY_AMOUNT != '' ">
			, PAY_AMOUNT
			</if>
			<if test="EXPECTED_PAY_AMOUNT != null and EXPECTED_PAY_AMOUNT != '' ">
			, EXPECTED_PAY_AMOUNT
			</if>
		)VALUES (
			  #{CUST_ID}
			, NOW()
			<if test="CARD_INFO != null and CARD_INFO != '' ">
			, #{CARD_INFO}
			</if>
			<if test="CUST_SUBSC_PLAN != null and CUST_SUBSC_PLAN != '' ">
			, #{CUST_SUBSC_PLAN}
			</if>
			<if test="RECENT_PAYMENT_DATE != null and RECENT_PAYMENT_DATE != '' ">
			, #{RECENT_PAYMENT_DATE}
			</if>
			<if test="NEXT_PAYMENT_DATE != null and NEXT_PAYMENT_DATE != '' ">
			, #{NEXT_PAYMENT_DATE}
			</if>
			<if test="PAY_AMOUNT != null and PAY_AMOUNT != '' ">
			, #{PAY_AMOUNT}
			</if>
			<if test="EXPECTED_PAY_AMOUNT != null and EXPECTED_PAY_AMOUNT != '' ">
			, #{EXPECTED_PAY_AMOUNT}
			</if>
		)
	</insert>
	
		<update id="updateCustBaseInfo" parameterType="map">
	 UPDATE CUST_BASE_INFO  /*updateCustBaseInfo -  고객 정보 업데이트 */
	 SET 
	 	MODIFY_DT = NOW()
	    ,  CUST_TEL_NO =#{CUST_TEL_NO}
	  	,  CUST_COMPANY_NO =#{CUST_COMPANY_NO}
	  	,  CUST_HOME_NO =#{CUST_HOME_NO}
	  	,  CUST_ADDRESS =#{CUST_ADDRESS}
	  	,  CUST_DETAIL_ADDRESS =#{CUST_DETAIL_ADDRESS}
	  	,  CONSULT_CHAT_ID =#{CONSULT_CHAT_ID}
	  	,  CUST_SUBSC_PLAN =#{CUST_SUBSC_PLAN}
	  	,  CUST_API_ID =#{CUST_API_ID}
	  	,  CUST_API_KEY =#{CUST_API_KEY}
	  	,  CUST_REG_DATE =#{CUST_REG_DATE}
	  	,  CUST_REG_PATH =#{CUST_REG_PATH}
	  	,  CUST_TERM_DATE =#{CUST_TERM_DATE}
	  	,  CUST_ADDRESS2 =#{CUST_ADDRESS2}
	  	,  CUST_DETAIL_ADDRESS2 =#{CUST_DETAIL_ADDRESS2}
	 	,  CUST_EMAIL =#{CUST_EMAIL}
	  	,  CUST_TYPE =#{CUST_TYPE}
	  	,  CUST_NM =#{CUST_NM}
	 WHERE  CUST_ID = #{CUST_ID}
	</update>
	
	<update id="mergeCustPaymentInfo" parameterType="map">
	<selectKey keyProperty="PAY_ID" resultType="integer" order="BEFORE">
    	SELECT max(PAY_ID) FROM CUST_PAYMENT_INFO WHERE CUST_ID = #{CUST_ID} 
  	</selectKey>
		INSERT INTO /*mergeCustPaymentInfo - 결제정보merge*/
		CUST_PAYMENT_INFO (
		CARD_INFO
		, CUST_ID
		, RECENT_PAYMENT_DATE
		, PAY_AMOUNT
		, NEXT_PAYMENT_DATE
		, CUST_SUBSC_PLAN
		, EXPECTED_PAY_AMOUNT
		, CREATOR_ID
		, UPDATER_ID
		, CREATED_DTM
		, PAY_ID
		)
		VALUES (
		  #{CARD_INFO}
		, #{CUST_ID}
		, #{RECENT_PAYMENT_DATE}
		, #{PAY_AMOUNT}
		, #{NEXT_PAYMENT_DATE}
		, #{CUST_SUBSC_PLAN}
		, #{EXPECTED_PAY_AMOUNT}
		, #{CUST_OP_ID}
		, #{CUST_OP_ID}
		, NOW()
		,#{PAY_ID}
		)
		ON DUPLICATE KEY
		UPDATE
		  CARD_INFO = #{CARD_INFO}
		, RECENT_PAYMENT_DATE = #{RECENT_PAYMENT_DATE}
		, PAY_AMOUNT = #{PAY_AMOUNT}
		, NEXT_PAYMENT_DATE = #{NEXT_PAYMENT_DATE}
		, CUST_SUBSC_PLAN = #{CUST_SUBSC_PLAN}
		, EXPECTED_PAY_AMOUNT = #{EXPECTED_PAY_AMOUNT}
	</update>
	
	<update id="updateUserPw" parameterType="map">
		UPDATE TN_USER  /*updateUserPw -  상담사 비밀번호 업데이트 */
		SET  
		USER_PW = #{CUST_OP_CH_PW},
		ENABLED_YN = #{ENABLED_YN},
		PASSWORD_CHANGE_DE = NOW()
		WHERE 1=1
			AND USER_ID = #{CUST_OP_ID}
			AND USER_NO = #{CUST_OP_USER_ID}
	</update>
	
	<select id="getUserObResultRecall" parameterType="String" resultType="ai.maum.biz.fastaicc.main.cousult.outbound.domain.CallHistoryVO">
		SELECT A.CALL_ID
		     , A.CALL_DATE
		     , IFNULL(IF(A.CALL_TYPE_CODE='CT0001','I/B','O/B'),'-') AS CALL_TYPE_NM
		 	 , A.CUST_OP_ID
		 	 , A.SIP_USER
		 	 , A.DIAL_RESULT
		 	 , A.CALL_MEMO
		 	 , A.MNT_STATUS
		 	 , A.MNT_STATUS_NAME
		 	 , B.RECALL_TEL_NO
		 	 , B.RECALL_DATE
		  FROM CALL_HISTORY A 
		  LEFT OUTER JOIN RECALL_HISTORY B
			ON A.CALL_ID = B.CALL_ID
		 WHERE A.CALL_ID = #{callId}
		   AND A.CALL_TYPE_CODE = 'CT0002'
	</select>
	
	<update id="updateCustId" parameterType="map">
		UPDATE CM_CONTRACT SET CUST_ID = (SELECT CUST_ID FROM CUST_BASE_INFO WHERE CUST_TEL_NO = #{custTelNo} LIMIT 1) WHERE CONTRACT_NO = #{contractNo}
	</update>
	
	<update id="updateObCustId" parameterType="map">
		UPDATE CM_CONTRACT SET CUST_ID = (
		    							  SELECT CUST_ID
										    FROM CUST_INFO
										   WHERE CUST_TEL_NO = #{custTelNo}
											 AND CAMPAIGN_ID = #{campaignId}
		    							  )
		 WHERE CONTRACT_NO = #{contractNo}
	</update>


	<select id="getPwDate" parameterType="map" resultType="map">
		SELECT PASSWORD_CHANGE_DE, REGIST_DT
		FROM TN_USER
		WHERE USER_ID = #{USER_ID}
	</select>

	<select id="checkIsInbound" parameterType="map" resultType="map">
		SELECT IS_INBOUND AS isInbound
		     , CAMPAIGN_ID AS campaignId
		  FROM CM_CONTRACT WHERE CONTRACT_NO = #{contractNo}
	</select>
</mapper>
