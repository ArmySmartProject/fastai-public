<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ai.maum.biz.fastaicc.main.workRequestProcess.mapper.WorkRequestProcessMapper">
    <insert id="insertWorkRequest" parameterType="map">
        <selectKey keyProperty="workRequestNo" resultType="string" order="AFTER">
            select CONCAT(DATE_FORMAT(NOW(),'%Y%m%d'),'-',IFNULL(MAX(cast(SUBSTRING_INDEX(WORK_REQUEST_NO,'-',-1) AS int)),0)) as workRequestNo from WORK_REQUEST_LIST
        </selectKey>
        INSERT INTO WORK_REQUEST_LIST ( WORK_REQUEST_NO
                                      , STAT_CODE
                                      , WORK_REQUEST_TITLE
                                      , WORK_CATEGORY
                                      , WORK_COMPLETE_REQUEST_DTM
                                      , PRE_CONFERENCE_YN
                                      , WORK_CONTENTS
                                      , WORK_FILE_NM
                                      , PLANER_ID
                                      , SIGNER_ID
                                      )
        (SELECT <choose>
                    <when test="workRequestNo == '' or workRequestNo == NUll">
                        CONCAT(DATE_FORMAT(NOW(),'%Y%m%d'),'-',IFNULL(MAX(cast(SUBSTRING_INDEX(WORK_REQUEST_NO,'-',-1) AS int)),0)+1)
                    </when>
                    <otherwise>
                        #{workRequestNo}
                    </otherwise>
                </choose>
             , #{statCode} as STAT_CODE
             , #{workRequestTitle} as WORK_REQUEST_TITLE
             , #{workCategory} as WORK_CATEGORY
             , #{workCompleteRequestDtm} as WORK_COMPLETE_REQUEST_DTM
             , #{preConferenceYn} as PRE_CONFERENCE_YN
             , #{workContents} as WORK_CONTENTS
             , #{workFileNm} as WORK_FILE_NM
             , #{planerId} as PLANER_ID
             , #{signerId} as SIGNER_ID
          FROM WORK_REQUEST_LIST)
            ON DUPLICATE KEY
        UPDATE STAT_CODE = #{statCode}
             , WORK_REQUEST_TITLE = #{workRequestTitle}
             , WORK_CATEGORY = #{workCategory}
             , WORK_COMPLETE_REQUEST_DTM = #{workCompleteRequestDtm}
             , PRE_CONFERENCE_YN = #{preConferenceYn}
             , WORK_CONTENTS = #{workContents}
             , WORK_FILE_NM = #{workFileNm}
             , PLANER_ID = #{planerId}
             , SIGNER_ID = #{signerId}
    </insert>

    <select id="getCampaignListForWorkProcess" parameterType="map" resultType="map">
        SELECT A.CAMPAIGN_ID, A.CAMPAIGN_NM
        FROM CM_CAMPAIGN A
           , CM_COMPANY B
           , CM_COMPANY_CAMPAIGNS C
        WHERE A.CAMPAIGN_ID = C.CAMPAIGN_ID
          AND C.COMPANY_ID = B.COMPANY_ID
          AND B.COMPANY_ID = #{companyId}
    </select>

    <select id="getSignerListForWorkProcess" parameterType="map" resultType="map">
        SELECT USER_ID
          FROM TN_USER
         WHERE COMPANY_ID = #{companyId}
    </select>

    <select id="getWorkRequestProcessList" parameterType="map" resultType="map">
        SELECT @rownum := @rownum+1 AS RNUM
		      , T.workRequestNo
		      , T.workRequestTitle
		      , T.workPlanDate
              , T.planerId
              , T.signerId
              , T.statCode
              , T.statCodeNm
        FROM (
            SELECT A.WORK_REQUEST_NO AS workRequestNo
                , A.WORK_REQUEST_TITLE AS workRequestTitle
                , A.PLANER_ID AS planerId
                , DATE_FORMAT(A.WORK_PLAN_DTM,'%Y-%m-%d') as workPlanDate
                , A.SIGNER_ID AS signerId
                , A.STAT_CODE AS statCode
                , B.PLAN_STAT_CODE_NM AS statCodeNm
            FROM WORK_REQUEST_LIST A
            LEFT OUTER JOIN WORK_REQUEST_STAT_CODE B
            ON A.STAT_CODE = B.STAT_CODE
            JOIN (SELECT @rownum := 0) AS R
           WHERE A.PLANER_ID = #{planerId}
        ORDER BY created_dtm desc
            ) T
            <if test="rowNum != null and rowNum != ''">
                LIMIT #{rowNum, jdbcType=INTEGER}
            </if>
            <if test="offset != null and offset != ''">
                OFFSET #{offset, jdbcType=INTEGER}
            </if>
    </select>
    <select id="getWorkRequestProcessListCount" parameterType="map" resultType="map">
        SELECT COUNT(*) as totalCnt
        FROM (
            SELECT A.WORK_REQUEST_NO AS workRequestNo
                , A.WORK_REQUEST_TITLE AS workRequestTitle
                , A.PLANER_ID AS planerId
                , DATE_FORMAT(A.WORK_PLAN_DTM,'%Y-%m-%d') as workPlanDate
                , A.SIGNER_ID AS signerId
                , A.STAT_CODE AS statCode
                , B.PLAN_STAT_CODE_NM AS statCodeNm
            FROM WORK_REQUEST_LIST A
            LEFT OUTER JOIN WORK_REQUEST_STAT_CODE B
            ON A.STAT_CODE = B.STAT_CODE
            JOIN (SELECT @rownum := 0) AS R
            WHERE A.PLANER_ID = #{planerId}
            ) T;
    </select>

    <select id="getWorkRequestProcessDetail" parameterType="map" resultType="map">
        SELECT A.WORK_REQUEST_NO AS workRequestNo
             , DATE_FORMAT(A.CREATED_DTM, '%Y-%m-%d') AS createdDtm
             , B.CAMPAIGN_NM AS workCategory
             , A.SIGNER_ID AS signerId
             , A.WORK_REQUEST_TITLE AS workRequestTitle
             , DATE_FORMAT(A.WORK_COMPLETE_REQUEST_DTM, '%Y-%m-%d') AS workCompleteRequestDtm
             , DATE_FORMAT(A.WORK_COMPLETE_DTM, '%Y-%m-%d') AS workCompleteDtm
             , A.PLANER_ID AS planerId
             , A.PRE_CONFERENCE_YN AS preConferenceYn
             , A.WORK_CONTENTS AS workContents
             , A.WORK_FILE_NM AS workFileNm
         FROM WORK_REQUEST_LIST A
         LEFT OUTER JOIN CM_CAMPAIGN B
           ON A.WORK_CATEGORY = B.CAMPAIGN_ID
        WHERE A.WORK_REQUEST_NO = #{workRequestNo}
    </select>

    <insert id="insertWorkRequestUploadForm" parameterType="map">
        INSERT INTO WORK_REQUEST_FORM_HISTORY (ID, FILE_NM)
        VALUES (#{id}, #{fileNm})
    </insert>

    <select id="getWorkRequestUploadForm" parameterType="map" resultType="map">
        SELECT ID AS id
             , FILE_NM AS fileNm
             , DATE_FORMAT(CREATED_DTM, '%Y-%m-%d') AS createdDtm
          FROM WORK_REQUEST_FORM_HISTORY
      ORDER BY CREATED_DTM DESC
         LIMIT 3;
    </select>

    <update id="updateWorkRequestListByNo" parameterType="map">
        UPDATE WORK_REQUEST_LIST SET <choose>
                                         <when test='workFileNm =="" '>
                                             WORK_FILE_NM = WORK_FILE_NM
                                         </when>
                                         <otherwise>
                                             WORK_FILE_NM = #{workFileNm}
                                         </otherwise>
                                      </choose>
        WHERE WORK_REQUEST_NO = #{workRequestNo}
    </update>

    <update id="updateWorkRequest" parameterType="map">
        UPDATE WORK_REQUEST_LIST SET STAT_CODE = 'WR04'  WHERE WORK_REQUEST_NO = #{workRequestNo}
    </update>

    <select id="getWorkRequestApprovalProcessList" parameterType="map" resultType="map">
        SELECT @rownum := @rownum+1 AS RNUM
             , T.WORK_REQUEST_NO AS workRequestNo
             , T.STAT_CODE AS statCode
             , T.SIGN_STAT_CODE_NM AS signStatCodeNm
             , T.WORK_REQUEST_TITLE AS workRequestTitle
             , T.PLANER_ID AS planerId
             , T.WORK_PLAN_DTM AS workPlanDtm
             , T.SIGNER_ID AS signerId
             , T.WORK_SIGN_DTM AS workSignDtm
        FROM (
                 SELECT A.WORK_REQUEST_NO
                      , A.STAT_CODE
                      , B.SIGN_STAT_CODE_NM
                      , A.WORK_REQUEST_TITLE
                      , A.PLANER_ID
                      , DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') AS WORK_PLAN_DTM
                      , A.SIGNER_ID
                      , IFNULL(DATE_FORMAT(A.WORK_SIGN_DTM, '%Y-%m-%d'), '-') AS WORK_SIGN_DTM
                 FROM WORK_REQUEST_LIST A
      LEFT OUTER JOIN WORK_REQUEST_STAT_CODE B
                   ON A.STAT_CODE = B.STAT_CODE
                 JOIN (SELECT @rownum := 0) AS R
                WHERE DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ >= ]]> #{fromDate}
                  AND DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ <= ]]> #{toDate}
                  <if test="workCategory != 'all' and workCategory != ''">
                      AND A.WORK_CATEGORY = #{workCategory}
                  </if>
                  <if test="workSignStat.size != 0">
                      AND A.STAT_CODE IN
                      <foreach collection="workSignStat" item="statCodeItem" index="index" open="(" close=")" separator=",">
                          #{statCodeItem}
                      </foreach>
                  </if>

             ORDER BY created_dtm desc
             ) T
        WHERE T.SIGN_STAT_CODE_NM IS NOT NULL
        <if test="rowNum != null and rowNum != ''">
            LIMIT #{rowNum, jdbcType=INTEGER}
        </if>
        <if test="offset != null and offset != ''">
            OFFSET #{offset, jdbcType=INTEGER}
        </if>
    </select>

    <select id="getWorkRequestApprovalProcessListCount" parameterType="map" resultType="map">
        SELECT COUNT(*) as totalCnt
        FROM (
            SELECT A.WORK_REQUEST_NO
                , A.STAT_CODE
                , B.SIGN_STAT_CODE_NM
                , A.WORK_REQUEST_TITLE
                , A.PLANER_ID
                , A.WORK_PLAN_DTM
                , A.SIGNER_ID
                , IFNULL(DATE_FORMAT(A.WORK_SIGN_DTM, '%Y-%m-%d'), '-') AS WORK_SIGN_DTM
            FROM WORK_REQUEST_LIST A
            LEFT OUTER JOIN WORK_REQUEST_STAT_CODE B
            ON A.STAT_CODE = B.STAT_CODE
            JOIN (SELECT @rownum := 0) AS R
            WHERE DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ >= ]]> #{fromDate}
            AND DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ <= ]]> #{toDate}
            <if test="workCategory != 'all' and workCategory != ''">
                AND A.WORK_CATEGORY = #{workCategory}
            </if>
            <if test="workSignStat.size != 0">
                AND A.STAT_CODE IN
                    <foreach collection="workSignStat" item="statCodeItem" index="index" open="(" close=")" separator=",">
                        #{statCodeItem}
                    </foreach>
            </if>
            ORDER BY created_dtm desc
            ) T
        WHERE T.SIGN_STAT_CODE_NM IS NOT NULL
    </select>

    <update id="updateApprovalSign" parameterType="map">
        UPDATE WORK_REQUEST_LIST
           SET STAT_CODE = 'WR05'
             , WORK_SIGN_DTM = NOW()
        WHERE WORK_REQUEST_NO = #{workRequestNo}
    </update>

    <select id="getWorkRequestListForWorkerList" parameterType="map" resultType="map">
        SELECT @rownum := @rownum+1 AS RNUM
             , T.WORK_REQUEST_NO AS workRequestNo
             , T.STAT_CODE AS statCode
             , T.WORKER_STAT_CODE_NM AS workerStatCodeNm
             , T.WORK_PLAN_DTM AS workPlanDtm
             , T.WORK_COMPLETE_REQUEST_DTM AS workCompleteRequestDtm
             , T.WORK_COMPLETE_DTM AS workCompleteDtm
             , T.TEST_COMPLETE_YN AS testCompleteYn
          FROM (
                SELECT A.WORK_REQUEST_NO
                     , A.STAT_CODE
                     , B.WORKER_STAT_CODE_NM
                     , DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') AS WORK_PLAN_DTM
                     , DATE_FORMAT(A.WORK_COMPLETE_REQUEST_DTM, '%Y-%m-%d') AS WORK_COMPLETE_REQUEST_DTM
                     , IFNULL(DATE_FORMAT(A.WORK_COMPLETE_DTM, '%Y-%m-%d'), '-') AS WORK_COMPLETE_DTM
                     , A.TEST_COMPLETE_YN
                  FROM WORK_REQUEST_LIST A
       LEFT OUTER JOIN WORK_REQUEST_STAT_CODE B
                    ON A.STAT_CODE = B.STAT_CODE
                  JOIN (SELECT @rownum := 0) AS R
                 WHERE DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ >= ]]> #{fromDate}
                   AND DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ <= ]]> #{toDate}
                <if test="workCategory != 'all' and workCategory != ''">
                   AND A.WORK_CATEGORY = #{workCategory}
                </if>
                <if test="workSignStat.size != 0">
                   AND A.STAT_CODE IN
                   <foreach collection="workSignStat" item="statCodeItem" index="index" open="(" close=")" separator=",">
                        #{statCodeItem}
                   </foreach>
                </if>
                ORDER BY created_dtm desc
        ) T
        WHERE T.WORKER_STAT_CODE_NM IS NOT NULL
        <if test="rowNum != null and rowNum != ''">
            LIMIT #{rowNum, jdbcType=INTEGER}
        </if>
        <if test="offset != null and offset != ''">
            OFFSET #{offset, jdbcType=INTEGER}
        </if>
    </select>

    <select id="getWorkRequestListForWorkerListCount" parameterType="map" resultType="map">
        SELECT COUNT(*) as totalCnt
          FROM (
                SELECT A.WORK_REQUEST_NO
                     , A.STAT_CODE
                     , B.WORKER_STAT_CODE_NM
                     , DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') AS WORK_PLAN_DTM
                     , DATE_FORMAT(A.WORK_COMPLETE_REQUEST_DTM, '%Y-%m-%d') AS WORK_COMPLETE_REQUEST_DTM
                     , IFNULL(DATE_FORMAT(A.WORK_COMPLETE_DTM, '%Y-%m-%d'), '-') AS WORK_COMPLETE_DTM
                     , A.TEST_COMPLETE_YN
                  FROM WORK_REQUEST_LIST A
       LEFT OUTER JOIN WORK_REQUEST_STAT_CODE B
                    ON A.STAT_CODE = B.STAT_CODE
                  JOIN (SELECT @rownum := 0) AS R
                 WHERE DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ >= ]]> #{fromDate}
                   AND DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ <= ]]> #{toDate}
                <if test="workCategory != 'all' and workCategory != ''">
                   AND A.WORK_CATEGORY = #{workCategory}
                </if>
                <if test="workSignStat.size != 0">
                   AND A.STAT_CODE IN
                   <foreach collection="workSignStat" item="statCodeItem" index="index" open="(" close=")" separator=",">
                       #{statCodeItem}
                   </foreach>
                </if>
                ORDER BY created_dtm desc
            ) T
        WHERE T.WORKER_STAT_CODE_NM IS NOT NULL
    </select>

    <update id="updateRequestTest" parameterType="map">
        UPDATE WORK_REQUEST_LIST SET STAT_CODE = 'WR07', WORK_COMPLETE_DTM = NOW() WHERE WORK_REQUEST_NO = #{workRequestNo}
    </update>

    <select id="getWorkRequestTestList" parameterType="map" resultType="map">
        SELECT @rownum := @rownum+1 AS RNUM
             , T.WORK_REQUEST_NO AS workRequestNo
             , T.STAT_CODE AS statCode
             , T.WORK_STAT_CODE_NM AS workStatCodeNm
             , T.WORK_PLAN_DTM AS workPlanDtm
             , T.WORK_COMPLETE_REQUEST_DTM AS workCompleteRequestDtm
             , T.WORK_COMPLETE_DTM AS workCompleteDtm
             , T.TEST_STAT_CODE_NM AS testStatCodeNm
          FROM (
                SELECT A.WORK_REQUEST_NO
                     , A.STAT_CODE
                     , B.WORK_STAT_CODE_NM
                     , DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') AS WORK_PLAN_DTM
                     , DATE_FORMAT(A.WORK_COMPLETE_REQUEST_DTM, '%Y-%m-%d') AS WORK_COMPLETE_REQUEST_DTM
                     , IFNULL(DATE_FORMAT(A.WORK_COMPLETE_DTM, '%Y-%m-%d'), '-') AS WORK_COMPLETE_DTM
                     , B.TEST_STAT_CODE_NM
                FROM WORK_REQUEST_LIST A
                LEFT OUTER JOIN WORK_REQUEST_STAT_CODE B
                ON A.STAT_CODE = B.STAT_CODE
                JOIN (SELECT @rownum := 0) AS R
                WHERE DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ >= ]]> #{fromDate}
                AND DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ <= ]]> #{toDate}
                <if test="workCategory != 'all' and workCategory != ''">
                    AND A.WORK_CATEGORY = #{workCategory}
                </if>
                <if test="workSignStat.size != 0">
                    AND A.STAT_CODE IN
                    <foreach collection="workSignStat" item="statCodeItem" index="index" open="(" close=")" separator=",">
                        #{statCodeItem}
                    </foreach>
                </if>
                ORDER BY created_dtm desc
           ) T
        WHERE T.WORK_STAT_CODE_NM IS NOT NULL
        <if test="rowNum != null and rowNum != ''">
            LIMIT #{rowNum, jdbcType=INTEGER}
        </if>
        <if test="offset != null and offset != ''">
            OFFSET #{offset, jdbcType=INTEGER}
        </if>
    </select>

    <select id="getWorkRequestTestListCount" parameterType="map" resultType="map">
        SELECT COUNT(*) as totalCnt
          FROM (
                SELECT A.WORK_REQUEST_NO
                , A.STAT_CODE
                , B.WORK_STAT_CODE_NM
                , DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') AS WORK_PLAN_DTM
                , DATE_FORMAT(A.WORK_COMPLETE_REQUEST_DTM, '%Y-%m-%d') AS WORK_COMPLETE_REQUEST_DTM
                , IFNULL(DATE_FORMAT(A.WORK_COMPLETE_DTM, '%Y-%m-%d'), '-') AS WORK_COMPLETE_DTM
                , B.TEST_STAT_CODE_NM
             FROM WORK_REQUEST_LIST A
  LEFT OUTER JOIN WORK_REQUEST_STAT_CODE B
               ON A.STAT_CODE = B.STAT_CODE
             JOIN (SELECT @rownum := 0) AS R
            WHERE DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ >= ]]> #{fromDate}
              AND DATE_FORMAT(A.WORK_PLAN_DTM, '%Y-%m-%d') <![CDATA[ <= ]]> #{toDate}
            <if test="workCategory != 'all' and workCategory != ''">
              AND A.WORK_CATEGORY = #{workCategory}
            </if>
            <if test="workSignStat.size != 0">
              AND A.STAT_CODE IN
              <foreach collection="workSignStat" item="statCodeItem" index="index" open="(" close=")" separator=",">
                   #{statCodeItem}
              </foreach>
            </if>
            ORDER BY created_dtm desc
          ) T
        WHERE T.WORK_STAT_CODE_NM IS NOT NULL
    </select>

    <insert id="insertWorkTest" parameterType="map">
        INSERT INTO WORK_REQUEST_TEST_LIST (WORK_REQUEST_NO, WORK_COMPLETE_DTM, TEST_CONTENTS, TEST_RESULT_YN, TEMP_SAVE_YN)
        VALUES (#{workRequestNo}, #{workCompleteDtm}, #{testContents}, #{testResultYn}, #{tempSaveYn})
    </insert>

    <update id="updateWorkRequstToTest" parameterType="map">
        UPDATE WORK_REQUEST_LIST
           SET STAT_CODE = #{statCode}
           <if test="testCompleteYn !='' and testCompleteYn != NULL">
               , TEST_COMPLETE_YN = #{testCompleteYn}
               , TEST_COUNT = TEST_COUNT + 1
           </if>
        WHERE WORK_REQUEST_NO = #{workRequestNo}
    </update>

    <select id="getWorkTempTestInfo" parameterType="map" resultType="map">
        SELECT WORK_REQUEST_NO AS workRequestNo
             , TEST_CONTENTS AS testContents
             , DATE_FORMAT(created_dtm , '%Y-%m-%d') AS createdDtm
             , TEST_RESULT_YN AS testResultYn
             , TEMP_SAVE_YN AS tempSaveYn
          FROM WORK_REQUEST_TEST_LIST
         WHERE WORK_REQUEST_NO = #{workRequestNo}
    </select>

    <select id="checkTempSave" parameterType="map" resultType="map">
        SELECT *
        FROM WORK_REQUEST_TEST_LIST WHERE work_request_no = #{workRequestNo} AND TEMP_SAVE_YN = 'Y'
    </select>

    <update id="updateWorkTest" parameterType="map">
        UPDATE WORK_REQUEST_TEST_LIST
           SET TEST_CONTENTS = #{testContents}
             , TEST_RESULT_YN = #{testResultYn}
             , TEMP_SAVE_YN = #{tempSaveYn}
         WHERE WORK_REQUEST_NO = #{workRequestNo}
           AND TEMP_SAVE_YN = 'Y'
    </update>

    <update id="updateImplementComplete" parameterType="map">
        UPDATE WORK_REQUEST_LIST SET STAT_CODE = 'WR10' WHERE WORK_REQUEST_NO = #{workRequestNo}
    </update>
</mapper>
